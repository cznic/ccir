// Code generated by running "go generate". DO NOT EDIT.

	// +build ignore
	
	// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

typedef unsigned int size_t ;
typedef int ssize_t ;
typedef size_t rsize_t ;
typedef int intptr_t ;
typedef unsigned int uintptr_t ;
typedef int ptrdiff_t ;
typedef unsigned short wchar_t ;
typedef unsigned short wint_t ;
typedef unsigned short wctype_t ;
typedef int errno_t ;
typedef long __time32_t ;
typedef long long __time64_t ;
typedef __time32_t time_t ;
struct threadlocaleinfostruct ;
struct threadmbcinfostruct ;
typedef struct threadlocaleinfostruct *pthreadlocinfo ;
typedef struct threadmbcinfostruct *pthreadmbcinfo ;
struct __lc_time_data ;
typedef struct localeinfo_struct {pthreadlocinfo locinfo ;pthreadmbcinfo mbcinfo ;}_locale_tstruct ;
typedef struct localeinfo_struct {pthreadlocinfo locinfo ;pthreadmbcinfo mbcinfo ;}*_locale_t ;

typedef struct tagLC_ID {unsigned short wLanguage ;unsigned short wCountry ;unsigned short wCodePage ;}LC_ID ;
typedef struct tagLC_ID {unsigned short wLanguage ;unsigned short wCountry ;unsigned short wCodePage ;}*LPLC_ID ;

typedef struct threadlocaleinfostruct {int refcount ;unsigned int lc_codepage ;unsigned int lc_collate_cp ;unsigned long lc_handle [6 ];LC_ID lc_id [6 ];struct {char *locale ;wchar_t *wlocale ;int *refcount ;int *wrefcount ;}lc_category [6 ];int lc_clike ;int mb_cur_max ;int *lconv_intl_refcount ;int *lconv_num_refcount ;int *lconv_mon_refcount ;struct lconv *lconv ;int *ctype1_refcount ;unsigned short *ctype1 ;const unsigned short *pctype ;const unsigned char *pclmap ;const unsigned char *pcumap ;struct __lc_time_data *lc_time_curr ;}threadlocinfo ;
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

void *_memccpy (void *_Dst ,const void *_Src ,int _Val ,size_t _MaxCount );
void *memchr (const void *_Buf ,int _Val ,size_t _MaxCount );
int _memicmp (const void *_Buf1 ,const void *_Buf2 ,size_t _Size );
int _memicmp_l (const void *_Buf1 ,const void *_Buf2 ,size_t _Size ,_locale_t _Locale );
int memcmp (const void *_Buf1 ,const void *_Buf2 ,size_t _Size );
void *memcpy (void *_Dst ,const void *_Src ,size_t _Size );
errno_t memcpy_s (void *_dest ,size_t _numberOfElements ,const void *_src ,size_t _count );
void *mempcpy (void *_Dst ,const void *_Src ,size_t _Size );
void *memset (void *_Dst ,int _Val ,size_t _Size );
void *memccpy (void *_Dst ,const void *_Src ,int _Val ,size_t _Size );
int memicmp (const void *_Buf1 ,const void *_Buf2 ,size_t _Size );
char *_strset (char *_Str ,int _Val );
char *_strset_l (char *_Str ,int _Val ,_locale_t _Locale );
char *strcpy (char *_Dest ,const char *_Source );
char *strcat (char *_Dest ,const char *_Source );
int strcmp (const char *_Str1 ,const char *_Str2 );
size_t strlen (const char *_Str );
size_t strnlen (const char *_Str ,size_t _MaxCount );
void *memmove (void *_Dst ,const void *_Src ,size_t _Size );
char *_strdup (const char *_Src );
char *strchr (const char *_Str ,int _Val );
int _stricmp (const char *_Str1 ,const char *_Str2 );
int _strcmpi (const char *_Str1 ,const char *_Str2 );
int _stricmp_l (const char *_Str1 ,const char *_Str2 ,_locale_t _Locale );
int strcoll (const char *_Str1 ,const char *_Str2 );
int _strcoll_l (const char *_Str1 ,const char *_Str2 ,_locale_t _Locale );
int _stricoll (const char *_Str1 ,const char *_Str2 );
int _stricoll_l (const char *_Str1 ,const char *_Str2 ,_locale_t _Locale );
int _strncoll (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strncoll_l (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
int _strnicoll (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strnicoll_l (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
size_t strcspn (const char *_Str ,const char *_Control );
char *_strerror (const char *_ErrMsg );
char *strerror (int );
char *_strlwr (char *_String );
char *strlwr_l (char *_String ,_locale_t _Locale );
char *strncat (char *_Dest ,const char *_Source ,size_t _Count );
int strncmp (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strnicmp (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strnicmp_l (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
char *strncpy (char *_Dest ,const char *_Source ,size_t _Count );
char *_strnset (char *_Str ,int _Val ,size_t _MaxCount );
char *_strnset_l (char *str ,int c ,size_t count ,_locale_t _Locale );
char *strpbrk (const char *_Str ,const char *_Control );
char *strrchr (const char *_Str ,int _Ch );
char *_strrev (char *_Str );
size_t strspn (const char *_Str ,const char *_Control );
char *strstr (const char *_Str ,const char *_SubStr );
char *strtok (char *_Str ,const char *_Delim );
char *strtok_r (char *_Str ,const char *_Delim ,char **__last );
char *_strupr (char *_String );
char *_strupr_l (char *_String ,_locale_t _Locale );
size_t strxfrm (char *_Dst ,const char *_Src ,size_t _MaxCount );
size_t _strxfrm_l (char *_Dst ,const char *_Src ,size_t _MaxCount ,_locale_t _Locale );
char *strdup (const char *_Src );
int strcmpi (const char *_Str1 ,const char *_Str2 );
int stricmp (const char *_Str1 ,const char *_Str2 );
char *strlwr (char *_Str );
int strnicmp (const char *_Str1 ,const char *_Str ,size_t _MaxCount );
int strncasecmp (const char *,const char *,size_t );
int strcasecmp (const char *,const char *);
char *strnset (char *_Str ,int _Val ,size_t _MaxCount );
char *strrev (char *_Str );
char *strset (char *_Str ,int _Val );
char *strupr (char *_Str );
wchar_t *_wcsdup (const wchar_t *_Str );
wchar_t *wcscat (wchar_t *_Dest ,const wchar_t *_Source );
wchar_t *wcschr (const wchar_t *_Str ,wchar_t _Ch );
int wcscmp (const wchar_t *_Str1 ,const wchar_t *_Str2 );
wchar_t *wcscpy (wchar_t *_Dest ,const wchar_t *_Source );
size_t wcscspn (const wchar_t *_Str ,const wchar_t *_Control );
size_t wcslen (const wchar_t *_Str );
size_t wcsnlen (const wchar_t *_Src ,size_t _MaxCount );
wchar_t *wcsncat (wchar_t *_Dest ,const wchar_t *_Source ,size_t _Count );
int wcsncmp (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
wchar_t *wcsncpy (wchar_t *_Dest ,const wchar_t *_Source ,size_t _Count );
wchar_t *_wcsncpy_l (wchar_t *_Dest ,const wchar_t *_Source ,size_t _Count ,_locale_t _Locale );
wchar_t *wcspbrk (const wchar_t *_Str ,const wchar_t *_Control );
wchar_t *wcsrchr (const wchar_t *_Str ,wchar_t _Ch );
size_t wcsspn (const wchar_t *_Str ,const wchar_t *_Control );
wchar_t *wcsstr (const wchar_t *_Str ,const wchar_t *_SubStr );
wchar_t *wcstok (wchar_t *_Str ,const wchar_t *_Delim );
wchar_t *_wcserror (int _ErrNum );
wchar_t *__wcserror (const wchar_t *_Str );
int _wcsicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int _wcsicmp_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,_locale_t _Locale );
int _wcsnicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
int _wcsnicmp_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
wchar_t *_wcsnset (wchar_t *_Str ,wchar_t _Val ,size_t _MaxCount );
wchar_t *_wcsrev (wchar_t *_Str );
wchar_t *_wcsset (wchar_t *_Str ,wchar_t _Val );
wchar_t *_wcslwr (wchar_t *_String );
wchar_t *_wcslwr_l (wchar_t *_String ,_locale_t _Locale );
wchar_t *_wcsupr (wchar_t *_String );
wchar_t *_wcsupr_l (wchar_t *_String ,_locale_t _Locale );
size_t wcsxfrm (wchar_t *_Dst ,const wchar_t *_Src ,size_t _MaxCount );
size_t _wcsxfrm_l (wchar_t *_Dst ,const wchar_t *_Src ,size_t _MaxCount ,_locale_t _Locale );
int wcscoll (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int _wcscoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,_locale_t _Locale );
int _wcsicoll (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int _wcsicoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,_locale_t _Locale );
int _wcsncoll (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
int _wcsncoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
int _wcsnicoll (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
int _wcsnicoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
wchar_t *wcsdup (const wchar_t *_Str );
int wcsicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int wcsnicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
wchar_t *wcsnset (wchar_t *_Str ,wchar_t _Val ,size_t _MaxCount );
wchar_t *wcsrev (wchar_t *_Str );
wchar_t *wcsset (wchar_t *_Str ,wchar_t _Val );
wchar_t *wcslwr (wchar_t *_Str );
wchar_t *wcsupr (wchar_t *_Str );
int wcsicoll (const wchar_t *_Str1 ,const wchar_t *_Str2 );
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

char *_getcwd (char *,int );
typedef unsigned long _fsize_t ;
struct _finddata32_t {unsigned attrib ;__time32_t time_create ;__time32_t time_access ;__time32_t time_write ;_fsize_t size ;char name [260 ];};
struct _finddata32i64_t {unsigned attrib ;__time32_t time_create ;__time32_t time_access ;__time32_t time_write ;long long size ;char name [260 ];};
struct _finddata64i32_t {unsigned attrib ;__time64_t time_create ;__time64_t time_access ;__time64_t time_write ;_fsize_t size ;char name [260 ];};
struct __finddata64_t {unsigned attrib ;__time64_t time_create ;__time64_t time_access ;__time64_t time_write ;long long size ;char name [260 ];};
struct _wfinddata32_t {unsigned attrib ;__time32_t time_create ;__time32_t time_access ;__time32_t time_write ;_fsize_t size ;wchar_t name [260 ];};
struct _wfinddata32i64_t {unsigned attrib ;__time32_t time_create ;__time32_t time_access ;__time32_t time_write ;long long size ;wchar_t name [260 ];};
struct _wfinddata64i32_t {unsigned attrib ;__time64_t time_create ;__time64_t time_access ;__time64_t time_write ;_fsize_t size ;wchar_t name [260 ];};
struct _wfinddata64_t {unsigned attrib ;__time64_t time_create ;__time64_t time_access ;__time64_t time_write ;long long size ;wchar_t name [260 ];};
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\_mingw_off_t.h 

typedef long _off_t ;
typedef long off32_t ;
typedef long long _off64_t ;
typedef long long off64_t ;
typedef off64_t off_t ;
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

int _access (const char *_Filename ,int _AccessMode );
errno_t _access_s (const char *_Filename ,int _AccessMode );
int _chmod (const char *_Filename ,int _Mode );
int _chsize (int _FileHandle ,long _Size );
errno_t _chsize_s (int _FileHandle ,long long _Size );
int _close (int _FileHandle );
int _commit (int _FileHandle );
int _creat (const char *_Filename ,int _PermissionMode );
int _dup (int _FileHandle );
int _dup2 (int _FileHandleSrc ,int _FileHandleDst );
int _eof (int _FileHandle );
long _filelength (int _FileHandle );
intptr_t _findfirst (const char *_Filename ,struct _finddata32_t *_FindData );
int _findnext (intptr_t _FindHandle ,struct _finddata32_t *_FindData );
int _findclose (intptr_t _FindHandle );
int _isatty (int _FileHandle );
int _locking (int _FileHandle ,int _LockMode ,long _NumOfBytes );
long _lseek (int _FileHandle ,long _Offset ,int _Origin );
_off64_t lseek64 (int fd ,_off64_t offset ,int whence );
char *_mktemp (char *_TemplateName );
errno_t _mktemp_s (char *_TemplateName ,size_t _Size );
int _pipe (int *_PtHandles ,unsigned int _PipeSize ,int _TextMode );
int _read (int _FileHandle ,void *_DstBuf ,unsigned int _MaxCharCount );
int remove (const char *_Filename );
int rename (const char *_OldFilename ,const char *_NewFilename );
int _unlink (const char *_Filename );
int unlink (const char *_Filename );
int _setmode (int _FileHandle ,int _Mode );
long _tell (int _FileHandle );
int _umask (int _Mode );
errno_t _umask_s (int _NewMode ,int *_OldMode );
int _write (int _FileHandle ,const void *_Buf ,unsigned int _MaxCharCount );
long long _filelengthi64 (int _FileHandle );
intptr_t _findfirst32i64 (const char *_Filename ,struct _finddata32i64_t *_FindData );
intptr_t _findfirst64 (const char *_Filename ,struct __finddata64_t *_FindData );
intptr_t _findfirst64i32 (const char *_Filename ,struct _finddata64i32_t *_FindData );
int _findnext32i64 (intptr_t _FindHandle ,struct _finddata32i64_t *_FindData );
int _findnext64 (intptr_t _FindHandle ,struct __finddata64_t *_FindData );
int _findnext64i32 (intptr_t _FindHandle ,struct _finddata64i32_t *_FindData );
long long _lseeki64 (int _FileHandle ,long long _Offset ,int _Origin );
long long _telli64 (int _FileHandle );
int chdir (const char *);
char *getcwd (char *,int );
int mkdir (const char *);
char *mktemp (char *);
int rmdir (const char *);
int chmod (const char *,int );
errno_t _sopen_s (int *_FileHandle ,const char *_Filename ,int _OpenFlag ,int _ShareFlag ,int _PermissionMode );
int _open (const char *_Filename ,int _OpenFlag ,...);
int _sopen (const char *_Filename ,int _OpenFlag ,int _ShareFlag ,...);
int _waccess (const wchar_t *_Filename ,int _AccessMode );
errno_t _waccess_s (const wchar_t *_Filename ,int _AccessMode );
int _wchmod (const wchar_t *_Filename ,int _Mode );
int _wcreat (const wchar_t *_Filename ,int _PermissionMode );
intptr_t _wfindfirst (const wchar_t *_Filename ,struct _wfinddata32_t *_FindData );
int _wfindnext (intptr_t _FindHandle ,struct _wfinddata32_t *_FindData );
int _wunlink (const wchar_t *_Filename );
int _wrename (const wchar_t *_OldFilename ,const wchar_t *_NewFilename );
wchar_t *_wmktemp (wchar_t *_TemplateName );
errno_t _wmktemp_s (wchar_t *_TemplateName ,size_t _SizeInWords );
intptr_t _wfindfirsti64 (const wchar_t *_Filename ,struct _wfinddata32i64_t *_FindData );
intptr_t _wfindfirst64i32 (const wchar_t *_Filename ,struct _wfinddata64i32_t *_FindData );
intptr_t _wfindfirst64 (const wchar_t *_Filename ,struct _wfinddata64_t *_FindData );
int _wfindnexti64 (intptr_t _FindHandle ,struct _wfinddata32i64_t *_FindData );
int _wfindnext64i32 (intptr_t _FindHandle ,struct _wfinddata64i32_t *_FindData );
int _wfindnext64 (intptr_t _FindHandle ,struct _wfinddata64_t *_FindData );
errno_t _wsopen_s (int *_FileHandle ,const wchar_t *_Filename ,int _OpenFlag ,int _ShareFlag ,int _PermissionFlag );
int _wopen (const wchar_t *_Filename ,int _OpenFlag ,...);
int _wsopen (const wchar_t *_Filename ,int _OpenFlag ,int _ShareFlag ,...);
int __lock_fhandle (int _Filehandle );
void _unlock_fhandle (int _Filehandle );
intptr_t _get_osfhandle (int _FileHandle );
int _open_osfhandle (intptr_t _OSFileHandle ,int _Flags );
int access (const char *_Filename ,int _AccessMode );
int chmod (const char *_Filename ,int _AccessMode );
int chsize (int _FileHandle ,long _Size );
int close (int _FileHandle );
int creat (const char *_Filename ,int _PermissionMode );
int dup (int _FileHandle );
int dup2 (int _FileHandleSrc ,int _FileHandleDst );
int eof (int _FileHandle );
long filelength (int _FileHandle );
int isatty (int _FileHandle );
int locking (int _FileHandle ,int _LockMode ,long _NumOfBytes );
long lseek (int _FileHandle ,long _Offset ,int _Origin );
char *mktemp (char *_TemplateName );
int open (const char *_Filename ,int _OpenFlag ,...);
int read (int _FileHandle ,void *_DstBuf ,unsigned int _MaxCharCount );
int setmode (int _FileHandle ,int _Mode );
int sopen (const char *_Filename ,int _OpenFlag ,int _ShareFlag ,...);
long tell (int _FileHandle );
int umask (int _Mode );
int write (int _Filehandle ,const void *_Buf ,unsigned int _MaxCharCount );
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

uintptr_t _beginthread (void (*_StartAddress )(void *),unsigned _StackSize ,void *_ArgList );
void _endthread (void );
uintptr_t _beginthreadex (void *_Security ,unsigned _StackSize ,unsigned (*_StartAddress )(void *),void *_ArgList ,unsigned _InitFlag ,unsigned *_ThrdAddr );
void _endthreadex (unsigned _Retval );
void exit (int _Code );
void _exit (int _Code );
void _Exit (int );
void abort (void );
void _cexit (void );
void _c_exit (void );
int _getpid (void );
intptr_t _cwait (int *_TermStat ,intptr_t _ProcHandle ,int _Action );
intptr_t _execl (const char *_Filename ,const char *_ArgList ,...);
intptr_t _execle (const char *_Filename ,const char *_ArgList ,...);
intptr_t _execlp (const char *_Filename ,const char *_ArgList ,...);
intptr_t _execlpe (const char *_Filename ,const char *_ArgList ,...);
intptr_t _execv (const char *_Filename ,const char *const *_ArgList );
intptr_t _execve (const char *_Filename ,const char *const *_ArgList ,const char *const *_Env );
intptr_t _execvp (const char *_Filename ,const char *const *_ArgList );
intptr_t _execvpe (const char *_Filename ,const char *const *_ArgList ,const char *const *_Env );
intptr_t _spawnl (int _Mode ,const char *_Filename ,const char *_ArgList ,...);
intptr_t _spawnle (int _Mode ,const char *_Filename ,const char *_ArgList ,...);
intptr_t _spawnlp (int _Mode ,const char *_Filename ,const char *_ArgList ,...);
intptr_t _spawnlpe (int _Mode ,const char *_Filename ,const char *_ArgList ,...);
intptr_t _spawnv (int _Mode ,const char *_Filename ,const char *const *_ArgList );
intptr_t _spawnve (int _Mode ,const char *_Filename ,const char *const *_ArgList ,const char *const *_Env );
intptr_t _spawnvp (int _Mode ,const char *_Filename ,const char *const *_ArgList );
intptr_t _spawnvpe (int _Mode ,const char *_Filename ,const char *const *_ArgList ,const char *const *_Env );
int system (const char *_Command );
intptr_t _wexecl (const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wexecle (const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wexeclp (const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wexeclpe (const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wexecv (const wchar_t *_Filename ,const wchar_t *const *_ArgList );
intptr_t _wexecve (const wchar_t *_Filename ,const wchar_t *const *_ArgList ,const wchar_t *const *_Env );
intptr_t _wexecvp (const wchar_t *_Filename ,const wchar_t *const *_ArgList );
intptr_t _wexecvpe (const wchar_t *_Filename ,const wchar_t *const *_ArgList ,const wchar_t *const *_Env );
intptr_t _wspawnl (int _Mode ,const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wspawnle (int _Mode ,const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wspawnlp (int _Mode ,const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wspawnlpe (int _Mode ,const wchar_t *_Filename ,const wchar_t *_ArgList ,...);
intptr_t _wspawnv (int _Mode ,const wchar_t *_Filename ,const wchar_t *const *_ArgList );
intptr_t _wspawnve (int _Mode ,const wchar_t *_Filename ,const wchar_t *const *_ArgList ,const wchar_t *const *_Env );
intptr_t _wspawnvp (int _Mode ,const wchar_t *_Filename ,const wchar_t *const *_ArgList );
intptr_t _wspawnvpe (int _Mode ,const wchar_t *_Filename ,const wchar_t *const *_ArgList ,const wchar_t *const *_Env );
int _wsystem (const wchar_t *_Command );
void __security_init_cookie (void );
void __security_check_cookie (uintptr_t _StackCookie );
void __report_gsfailure (void );
extern uintptr_t __security_cookie ;
intptr_t _loaddll (char *_Filename );
int _unloaddll (intptr_t _Handle );
int (*_getdllprocaddr (intptr_t _Handle ,char *_ProcedureName ,intptr_t _Ordinal ))(void );
intptr_t cwait (int *_TermStat ,intptr_t _ProcHandle ,int _Action );
intptr_t execl (const char *_Filename ,const char *_ArgList ,...);
intptr_t execle (const char *_Filename ,const char *_ArgList ,...);
intptr_t execlp (const char *_Filename ,const char *_ArgList ,...);
intptr_t execlpe (const char *_Filename ,const char *_ArgList ,...);
intptr_t spawnl (int ,const char *_Filename ,const char *_ArgList ,...);
intptr_t spawnle (int ,const char *_Filename ,const char *_ArgList ,...);
intptr_t spawnlp (int ,const char *_Filename ,const char *_ArgList ,...);
intptr_t spawnlpe (int ,const char *_Filename ,const char *_ArgList ,...);
int getpid (void );
intptr_t execv (const char *_Filename ,char *const _ArgList []);
intptr_t execve (const char *_Filename ,char *const _ArgList [],char *const _Env []);
intptr_t execvp (const char *_Filename ,char *const _ArgList []);
intptr_t execvpe (const char *_Filename ,char *const _ArgList [],char *const _Env []);
intptr_t spawnv (int ,const char *_Filename ,char *const _ArgList []);
intptr_t spawnve (int ,const char *_Filename ,char *const _ArgList [],char *const _Env []);
intptr_t spawnvp (int ,const char *_Filename ,char *const _ArgList []);
intptr_t spawnvpe (int ,const char *_Filename ,char *const _ArgList [],char *const _Env []);
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _RSIZE_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _wfinddatai64_t _wfinddata32i64_t
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _TIME_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _P_WAIT (0)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_2(__ret, __func, __type0, __arg0, __dsttype, __dst, __type1, __arg1, __type2, __arg2) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _wfindnext32i64 _wfindnexti64
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _SPAWNV_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _WCHAR_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define _WConst_return _CONST_RETURN
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _PTRDIFF_T_ 
#define __uintptr_t_defined 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define NULL ( ( void * ) 0 )
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _FILE_OFFSET_BITS_SET_LSEEK 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _TIME32_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\_mingw_off_t.h 

#define _FILE_OFFSET_BITS_SET_OFFT 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _WFINDDATA_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _PTRDIFF_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _A_ARCH (32)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _THREADLOCALEINFO 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _P_DETACH (4)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define R_OK (4)
#define _FSIZE_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _A_SUBDIR (16)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define _CRT_MEMORY_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define WAIT_GRANDCHILD _WAIT_GRANDCHILD
#define _WAIT_CHILD (0)
#define _INC_PROCESS 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(__ret, __func, __dsttype, __dst, __type1, __arg1, __type2, __arg2) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _CRT_GETPID_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_4(__ret, __func, __dsttype, __dst, __type1, __arg1, __type2, __arg2, __type3, __arg3, __type4, __arg4) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _wfinddata_t _wfinddata32_t
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(__ret, __func, __vfunc, __dsttype, __dst, __type1, __arg1, __type2, __arg2) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_3(__ret, __func, __type0, __arg0, __dsttype, __dst, __type1, __arg1, __type2, __arg2, __type3, __arg3) 
#define _WINT_T 
#define _CRTNOALIAS 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define WAIT_CHILD _WAIT_CHILD
#define _CRT_TERMINATE_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _finddatai64_t _finddata32i64_t
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\_mingw_off_t.h 

#define _OFF_T_ 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_3(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_3_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 , __arg3_type , __arg3 )
#define _SIZE_T_DEFINED 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_2_0(__ret, __func, __type1, __arg1, __type2, __arg2, __dsttype, __dst) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define _NLSCMP_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _CRT_DIRECTORY_DEFINED 
#define _findnext32 _findnext
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 )
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define OLD_P_OVERLAY _OLD_P_OVERLAY
#define _WEXEC_DEFINED 
#define P_OVERLAY _P_OVERLAY
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_SPLITPATH(__ret, __func, __dsttype, __src) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define _INC_STRING 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _FINDDATA_T_DEFINED 
#define _IO_H_ 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _ERRCODE_DEFINED 
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_4(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3, __arg4_type, __arg4) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_4_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 , __arg3_type , __arg3 , __arg4_type , __arg4 )
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\_mingw_off_t.h 

#define _OFF64_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _WSPAWN_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_4_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3, __arg4_type, __arg4) 
#define _CRT_PACKING (8)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define _WSTRING_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _WIO_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _TIME64_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define P_DETACH _P_DETACH
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(__ret, __func, __dsttype, __dst, __type1, __arg1) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define strcasecmp _stricmp
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _UINTPTR_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define lseek lseek64
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define _NLSCMPERROR (2147483647)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define W_OK (2)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_0_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _P_OVERLAY (2)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_3_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _finddata_t _finddata32_t
#define _A_HIDDEN (2)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _WAIT_GRANDCHILD (1)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define X_OK (1)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_1(__ret, __func, __type0, __arg0, __dsttype, __dst, __type1, __arg1) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define strncasecmp _strnicmp
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _wfindnext32 _wfindnext
#define _A_SYSTEM (4)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _INC_CRTDEFS 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _CRT_SYSTEM_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _WCTYPE_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _wfindfirst32i64 _wfindfirsti64
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(__ret, __func, __dsttype, __dst, __type1, __arg1, __type2, __arg2, __type3, __arg3) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\string.h 

#define wcswcs wcsstr
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_0(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_0_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst )
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define P_NOWAITO _P_NOWAITO
#define _OLD_P_OVERLAY (2)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _findfirst32 _findfirst
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __crt_typefix(ctype) 
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 )
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _wfindfirst32 _wfindfirst
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _CRT_SECURE_CPP_NOTHROW throw ( )
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _P_NOWAIT (1)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __intptr_t_defined 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\_mingw_off_t.h 

#define _OFF_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_0(__ret, __func, __dsttype, __dst) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _CRT_WSYSTEM_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(__ret, __func, __vfunc, __dsttype, __dst, __type1, __arg1) 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define P_NOWAIT _P_NOWAIT
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _A_RDONLY (1)
#define _A_NORMAL (0)
#define _findfirsti64 _findfirst32i64
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\process.h 

#define _P_NOWAITO (3)
#define P_WAIT _P_WAIT
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _INTPTR_T_DEFINED 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define F_OK (0)
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _SSIZE_T_DEFINED 
#define _CRTRESTRICT 
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\io.h 

#define _findnexti64 _findnext32i64
// BEGIN OF FILE m:\mingw\x86_64-w64-mingw32\include\crtdefs.h 

#define _TAGLC_ID_DEFINED
